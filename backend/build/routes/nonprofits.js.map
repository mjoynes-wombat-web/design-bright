{"version":3,"sources":["../../src/routes/nonprofits.js"],"names":["router","post","req","res","body","results","status","json","error","get","accessToken","params","user","nonprofitId","app_metadata","nonProfitID","dataValues","statusCode","original"],"mappings":";;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,sBAAf;;AAEAA,OAAOC,IAAP,CAAY,SAAZ,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnC,gCAAaD,IAAIE,IAAjB,EACGC,OAAD,IAAa;AACXF,QAAIG,MAAJ,CAAWD,QAAQC,MAAnB,EAA2BC,IAA3B,CAAgCF,OAAhC;AACD,GAHH,EAIGG,KAAD,IAAW;AACTL,QAAII,IAAJ,CAASC,KAAT;AACD,GANH;AAQD,CATD;;AAWAR,OAAOS,GAAP,CAAW,eAAX,EAA4B,CAACP,GAAD,EAAMC,GAAN,KAAc;AACxC,QAAMO,cAAcR,IAAIS,MAAJ,CAAWD,WAA/B;AACA,MAAI,2BAAYA,WAAZ,CAAJ,EAA8B;AAC5B,2BACEA,WADF,EAEGE,IAAD,IAAU;AACR,YAAMC,cAAcD,KAAKE,YAAL,CAAkBC,WAAtC;AACA,yCACEF,WADF,EAEER,WAAYA,YAAY,IAAZ,GACV,wBACE,GADF,EAEE,EAAEQ,WAAF,EAFF,EAGE,mFAHF,EAIEV,GAJF,CADU,GAMR,wBACA,GADA,EAEAE,QAAQW,UAFR,EAGC,2EAA0EJ,KAAKE,YAAL,CAAkBC,WAAY,GAHzG,EAIAZ,GAJA,CARN,EAcEK,SAAS,wBACP,GADO,EAEPA,KAFO,EAGP,qGAHO,EAIPL,GAJO,CAdX;AAoBD,KAxBH,EAyBEK,SAAS,wBACPA,MAAMS,UADC,EAEPT,MAAMU,QAFC,EAGP,sCAHO,EAIPf,GAJO,CAzBX;AA+BD;AACF,CAnCD;;kBAqCeH,M","file":"nonprofits.js","sourcesContent":["import { Router } from 'express';\nimport { addNonProfit, findNonProfitByID } from '../models/nonprofits';\n\nimport { getUserInfo } from '../models/Auth0';\nimport jsonResponse from '../helpers/response';\nimport requireAuth from '../helpers/requireAuth';\n\nconst router = Router();\n\nrouter.post('/create', (req, res) => {\n  addNonProfit(req.body,\n    (results) => {\n      res.status(results.status).json(results);\n    },\n    (error) => {\n      res.json(error);\n    },\n  );\n});\n\nrouter.get('/:accessToken', (req, res) => {\n  const accessToken = req.params.accessToken;\n  if (requireAuth(accessToken)) {\n    getUserInfo(\n      accessToken,\n      (user) => {\n        const nonprofitId = user.app_metadata.nonProfitID;\n        findNonProfitByID(\n          nonprofitId,\n          results => (results === null ?\n            jsonResponse(\n              404,\n              { nonprofitId },\n              'This account belongs to a non-profit that doesn\\'t exist. Please contact support.',\n              res)\n            : jsonResponse(\n              200,\n              results.dataValues,\n              `You have successfully retrieved the nonprofit's info that has the id of ${user.app_metadata.nonProfitID}.`,\n              res)\n          ),\n          error => jsonResponse(\n            500,\n            error,\n            'There was an issue retrieving the non-profit information from the database. Please contact support.',\n            res),\n        );\n      },\n      error => jsonResponse(\n        error.statusCode,\n        error.original,\n        'This access token is not authorized.',\n        res),\n    );\n  }\n});\n\nexport default router;\n"]}