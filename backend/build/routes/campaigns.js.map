{"version":3,"sources":["../../src/routes/campaigns.js"],"names":["router","get","req","res","Object","keys","query","length","search","sort","send","id","params","campaignId","isNaN","status","patch","post"],"mappings":";;;;;;AACA;;AAEA,MAAMA,SAAS,sBAAf;;AAEA;;;;AAIA;AATA;AAUAA,OAAOC,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,MAAIC,OAAOC,IAAP,CAAYH,IAAII,KAAhB,EAAuBC,MAAvB,GAAgC,CAApC,EAAuC;AACrC,UAAMC,SAASN,IAAII,KAAJ,CAAUE,MAAzB;AACA,UAAMC,OAAOP,IAAII,KAAJ,CAAUG,IAAvB;AACA,QAAIA,QAAQD,MAAZ,EAAoB;AAClBL,UAAIO,IAAJ,CAAU;wCACwBF,MAAO,kBAAiBC,IAAK;OAD/D;AAGD,KAJD,MAIO,IAAIA,IAAJ,EAAU;AACfN,UAAIO,IAAJ,CAAU;0CAC0BD,IAAK;OADzC;AAGD,KAJM,MAIA,IAAID,MAAJ,EAAY;AACjBL,UAAIO,IAAJ,CAAU;wCACwBR,IAAII,KAAJ,CAAUE,MAAO;OADnD;AAGD;AACF,GAhBD,MAgBO;AACLL,QAAIO,IAAJ,CAAS,kCAAT;AACD;AACF,CApBD;;AAsBA;AACAV,OAAOC,GAAP,CAAW,cAAX,EAA2B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvC,QAAMQ,KAAKT,IAAIU,MAAJ,CAAWC,UAAtB;AACA,MAAI,CAACC,MAAMH,EAAN,CAAL,EAAgB;AACdR,QAAIO,IAAJ,CAAU;uEACyDR,IAAIU,MAAJ,CAAWC,UAAW;KADzF;AAGD,GAJD,MAIO;AACLV,QAAIY,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAsB;mBACPC,EAAG;KADlB;AAGD;AACF,CAXD;;AAaA;AACA;AACAX,OAAOgB,KAAP,CAAa,mBAAb,EAAkC,CAACd,GAAD,EAAMC,GAAN,KAAc;AAC9C,QAAMQ,KAAKT,IAAIU,MAAJ,CAAWC,UAAtB;AACA,MAAI,CAACC,MAAMH,EAAN,CAAL,EAAgB;AACdR,QAAIO,IAAJ,CAAU;8DACgDC,EAAG;;GAD7D;AAID,GALD,MAKO;AACLR,QAAIO,IAAJ,CAAU;mBACKC,EAAG;KADlB;AAGD;AACF,CAZD;;AAcA;AACAX,OAAOiB,IAAP,CAAY,SAAZ,EAAuB,CAACf,GAAD,EAAMC,GAAN,KAAc;AACnCA,MAAIO,IAAJ,CAAU;;;GAAV;AAID,CALD;;AAOA;kBACeV,M","file":"campaigns.js","sourcesContent":["// Create API Users Router\nimport { Router } from 'express';\n\nconst router = Router();\n\n/*\n******CAMPAIGN ROUTES******\n*/\n\n// Returns the list of campaigns based on the search as sort queries.\nrouter.get('/', (req, res) => {\n  if (Object.keys(req.query).length > 0) {\n    const search = req.query.search;\n    const sort = req.query.sort;\n    if (sort && search) {\n      res.send(`\n        Returns campaigns filtered by ${search} and sorted by ${sort}.\n      `);\n    } else if (sort) {\n      res.send(`\n        Returns all campaigns sorted by ${sort}.\n      `);\n    } else if (search) {\n      res.send(`\n        Returns campaigns filtered by ${req.query.search}\n      `);\n    }\n  } else {\n    res.send('Returns all campaigns paginated.');\n  }\n});\n\n// Returns the information for the campaign with the campaignId param.\nrouter.get('/:campaignId', (req, res) => {\n  const id = req.params.campaignId;\n  if (!isNaN(id)) {\n    res.send(`\n    Returns the campaign information for the campaign with the id of ${req.params.campaignId}\n    `);\n  } else {\n    res.status(404).send(`\n    You provided ${id} for an id but it is not a number. Please provide a number.\n    `);\n  }\n});\n\n// Accepts information changes to a campaign with the campaignId param.\n// Returns the update campaign information.\nrouter.patch('/:campaignId/edit', (req, res) => {\n  const id = req.params.campaignId;\n  if (!isNaN(id)) {\n    res.send(`\n    Accepts new information for the campaign with the id of ${id}.\n    Returns the newly updated campaign information for that campaign.\n  `);\n  } else {\n    res.send(`\n    You provided ${id} for an id but it is not a number. Please provide a number.\n    `);\n  }\n});\n\n// Accepts a new campaign information. Returns the new created campaign.\nrouter.post('/create', (req, res) => {\n  res.send(`\n  Accepts a new campaign.\n  Returns the newly created campaign information for that campaign.\n  `);\n});\n\n// Exporting router as default.\nexport default router;\n"]}