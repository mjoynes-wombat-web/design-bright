{"version":3,"sources":["../../src/routes/campaigns.js"],"names":["upload","router","STRIPE_SECRET","config","parsed","stripe","get","req","res","Object","keys","query","length","search","sort","send","id","params","campaignId","results","campaignInfo","startDate","accessToken","user","parseInt","app_metadata","nonProfitID","nonprofitId","error","statusCode","original","patch","getCampaignId","campaignContent","body","getCampaignInfoResults","createContentResults","console","log","updateCampaignInfoResults","updateCampaignInfoErr","createContentError","getCampaignError","code","post","single","campaignName","imageType","imageAlt","image","file","imageDimensions","imgType","width","height","dimensions","originalName","originalname","fileName","substring","lastIndexOf","Date","toISOString","public_id","folder","tags","success","http_code","message","newCampaign","email","token","amount","description","charge","receipt_email","source","currency","metadata","charges","create","then","chargeConf","paid","amountCharged","toString","donateResults","data","databaseMessage","slice","getCampaignErr","catch","chargeErr"],"mappings":";;;;;;kQAAA;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;AACA;;;;AACA;;AACA;;;;;;AAEA,MAAMA,SAAS,uBAAf;AACA,MAAMC,SAAS,sBAAf;;AAEA,MAAM,EAAEC,aAAF,KAAoB,iBAAOC,MAAP,GAAgBC,MAA1C;;AAEA,MAAMC,SAAS,sBAAOH,aAAP,CAAf;;AAEA;;;;AAIA;AACAD,OAAOK,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,MAAIC,OAAOC,IAAP,CAAYH,IAAII,KAAhB,EAAuBC,MAAvB,GAAgC,CAApC,EAAuC;AACrC,UAAMC,SAASN,IAAII,KAAJ,CAAUE,MAAzB;AACA,UAAMC,OAAOP,IAAII,KAAJ,CAAUG,IAAvB;AACA,QAAIA,QAAQD,MAAZ,EAAoB;AAClBL,UAAIO,IAAJ,CAAU;wCACwBF,MAAO,kBAAiBC,IAAK;OAD/D;AAGD,KAJD,MAIO,IAAIA,IAAJ,EAAU;AACfN,UAAIO,IAAJ,CAAU;0CAC0BD,IAAK;OADzC;AAGD,KAJM,MAIA,IAAID,MAAJ,EAAY;AACjBL,UAAIO,IAAJ,CAAU;wCACwBR,IAAII,KAAJ,CAAUE,MAAO;OADnD;AAGD;AACF,GAhBD,MAgBO;AACLL,QAAIO,IAAJ,CAAS,kCAAT;AACD;AACF,CApBD;;AAsBA;AACAd,OAAOK,GAAP,CAAW,cAAX,EAA2B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvC,QAAMQ,KAAKT,IAAIU,MAAJ,CAAWC,UAAtB;AACA,qCACEF,EADF,EAEGG,OAAD,IAAa;AACX,QAAIA,QAAQC,YAAR,CAAqBC,SAAzB,EAAoC;AAClC,aAAO,wBACL,GADK,EAELF,OAFK,EAGJ,4CAA2CH,EAAG,EAH1C,EAILR,GAJK,CAAP;AAMD,KAPD,MAOO,IAAI,iBAAiBD,IAAII,KAAzB,EAAgC;AACrC,6BACEJ,IAAII,KAAJ,CAAUW,WADZ,EAEGC,IAAD,IAAU;AACR,YAAIC,SAASD,KAAKE,YAAL,CAAkBC,WAA3B,EAAwC,EAAxC,MAAgDP,QAAQC,YAAR,CAAqBO,WAAzE,EAAsF;AACpF,iBAAO,wBACL,GADK,EAELR,OAFK,EAGJ,wDAAuDH,EAAG,EAHtD,EAILR,GAJK,CAAP;AAMD;AACD,eAAO,wBACL,GADK,EAEL,EAFK,EAGJ,mDAAkDQ,EAAG,EAHjD,EAILR,GAJK,CAAP;AAMD,OAjBH,EAkBEoB,SAAS,wBACPA,MAAMC,UADC,EAEPD,MAAME,QAFC,EAGP,2CAHO,EAIPtB,GAJO,CAlBX;AAwBD,KAzBM,MAyBA;AACL,aAAO,wBACL,GADK,EAEL,EAFK,EAGL,qCAHK,EAILA,GAJK,CAAP;AAMD;AACD,WAAO,IAAP;AACD,GA5CH,EA6CGoB,KAAD,IAAW;AACT,QAAInB,OAAOC,IAAP,CAAYkB,KAAZ,EAAmBhB,MAAvB,EAA+B;AAC7B,aAAO,wBACL,GADK,EAELgB,KAFK,EAGL,mCAHK,EAILpB,GAJK,CAAP;AAMD;AACD,WAAO,wBACL,GADK,EAELoB,KAFK,EAGL,0DAHK,EAILpB,GAJK,CAAP;AAMD,GA5DH;AA8DD,CAhED;;AAkEA;AACA;AACAP,OAAO8B,KAAP,CAAa,mBAAb,EAAkC,CAACxB,GAAD,EAAMC,GAAN,KAAc;AAC9C,QAAMwB,gBAAgBR,SAASjB,IAAIU,MAAJ,CAAWC,UAApB,EAAgC,EAAhC,CAAtB;AACA,QAAM,EAAEI,WAAF,EAAeF,YAAf,EAA6Ba,eAA7B,KAAiD1B,IAAI2B,IAA3D;AACA,yBACEZ,WADF,EAEGC,IAAD,IAAU;AACR,UAAMI,cAAcH,SAASD,KAAKE,YAAL,CAAkBC,WAA3B,EAAwC,EAAxC,CAApB;AACA,QAAIN,aAAaO,WAAb,KAA6BA,WAAjC,EAA8C;AAC5C,sCACEK,aADF,EAEGG,sBAAD,IAA4B;AAC1B,YAAIA,uBAAuBR,WAAvB,KAAuCA,WAA3C,EAAwD;AACtD,iBAAO,8BACLK,aADK,EAELC,eAFK,EAGJG,oBAAD,IAA0B;AACxB,gBAAID,uBAAuBd,SAAvB,KAAqC,IAAzC,EAA+C;AAC7CgB,sBAAQC,GAAR,CAAYF,oBAAZ;AACA,qBAAO,mCACLT,WADK,EAELP,YAFK,EAGJmB,yBAAD,IAA+B;AAC7BF,wBAAQC,GAAR,CAAYC,yBAAZ;AACA,wCACE,GADF,EAEEA,yBAFF,EAGE,+CAHF,EAIE/B,GAJF;AAMD,eAXI,EAYJgC,qBAAD,IAA2B;AACzBH,wBAAQC,GAAR,CAAYE,qBAAZ;AACA,wCACE,GADF,EAEEA,qBAFF,EAGE,mDAHF,EAIEhC,GAJF;AAMD,eApBI,CAAP;AAqBD;AACD,mBAAO,wBACL,GADK,EAEL4B,oBAFK,EAGL,8CAHK,EAIL5B,GAJK,CAAP;AAMD,WAlCI,EAmCLiC,sBAAsB,wBACpB,GADoB,EAEpBA,kBAFoB,EAGpB,+CAHoB,EAIpBjC,GAJoB,CAnCjB,CAAP;AA0CD;AACD,eAAO,wBACL,GADK,EAEL;AACEmB,qBADF;AAEET,sBAAYc;AAFd,SAFK,EAML,+CANK,EAOLxB,GAPK,CAAP;AASD,OAxDH,EAyDEkC,oBAAoB,wBAClBA,iBAAiBC,IADC,EAElBD,gBAFkB,EAGjB,4BAA2BV,aAAc,sBAHxB,EAIlBxB,GAJkB,CAzDtB;AAgED;AACF,GAtEH,EAuEEoB,SAAS,wBACPA,MAAMC,UADC,EAEPD,MAAME,QAFC,EAGP,2CAHO,EAIPtB,GAJO,CAvEX;AA6ED,CAhFD;;AAkFAP,OAAO2C,IAAP,CAAY,2BAAZ,EAAyC5C,OAAO6C,MAAP,CAAc,MAAd,CAAzC,EAAgE,CAACtC,GAAD,EAAMC,GAAN,KAAc;AAC5E,QAAMQ,KAAKT,IAAIU,MAAJ,CAAWC,UAAtB;AACA,QAAM,EAAE4B,YAAF,EAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCrB,WAArC,KAAqDpB,IAAI2B,IAA/D;AACA,QAAMe,QAAQ1C,IAAI2C,IAAlB;;AAEA,QAAMC,kBAAmBC,OAAD,IAAa;AACnC,YAAQA,OAAR;AACE,WAAK,MAAL;AACE,eAAO,EAAEC,OAAO,IAAT,EAAeC,QAAQ,GAAvB,EAAP;AACF,WAAK,MAAL;AACE,eAAO,EAAED,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAAP;AACF,WAAK,OAAL;AACE,eAAO,EAAED,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAAP;AACF;AACE,eAAO,EAAED,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAAP;AARJ;AAUD,GAXD;;AAaA,QAAMC,aAAaJ,gBAAgBJ,SAAhB,CAAnB;AACA,QAAMS,eAAeP,MAAMQ,YAA3B;AACA,QAAMC,WAAY,GAAEF,aAAaG,SAAb,CAAuB,CAAvB,EAA0BH,aAAaI,WAAb,CAAyB,GAAzB,CAA1B,CAAyD,cAAa5C,EAAG,IAAI,IAAI6C,IAAJ,EAAD,CAAaC,WAAb,EAA2B,EAA3H;;AAEA,uCACEb,KADF;AAGIc,eAAWL,QAHf;AAIIM,YAAQrC;AAJZ,KAKO4B,UALP;AAMIU,UAAM,CAACjD,EAAD,EAAK,gBAAL,EAAuB8B,YAAvB,EAAqCE,QAArC;AANV,MAQEkB,WAAW,wBACT,GADS,EAETA,OAFS,EAGT,6BAHS,EAIT1D,GAJS,CARb,EAcEoB,SAAS,wBACPA,MAAMuC,SADC,EAEPvC,KAFO,EAGPA,MAAMwC,OAHC,EAIP5D,GAJO,CAdX;AAqBD,CA3CD;;AA6CA;AACAP,OAAO2C,IAAP,CAAY,SAAZ,EAAuB,CAACrC,GAAD,EAAMC,GAAN,KAAc;AACnC,QAAM,EAAE6D,WAAF,EAAe/C,WAAf,KAA+Bf,IAAI2B,IAAzC;AACA,MAAI,2BAAYZ,WAAZ,CAAJ,EAA8B;AAC5B,2BACEA,WADF,EAEGC,IAAD,IAAU;AACR,YAAMI,cAAcJ,KAAKE,YAAL,CAAkBC,WAAtC;;AAEA,qCACEC,WADF,EAEE0C,WAFF,EAGEH,WAAW7B,QAAQC,GAAR,CAAY4B,OAAZ,CAHb,EAIEtC,SAASS,QAAQC,GAAR,CAAYV,KAAZ,CAJX;AAMD,KAXH,EAYEA,SAAS,wBACPA,MAAMC,UADC,EAEPD,MAAME,QAFC,EAGP,2CAHO,EAIPtB,GAJO,CAZX;AAkBD,GAnBD,MAmBO;AACL,4BACE,GADF,EAEE,EAAEc,WAAF,EAFF,EAGE,+CAHF,EAIEd,GAJF;AAMD;AACF,CA7BD;;AAgCAP,OAAO2C,IAAP,CAAY,aAAZ,EAA2B,CAACrC,GAAD,EAAMC,GAAN,KAAc;AACvC,QAAM,EAAEQ,EAAF,KAAST,IAAIU,MAAnB;AACA,QAAM,EAAEqD,KAAF,EAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,KAAwClE,IAAI2B,IAAlD;;AAEA,QAAMwC,SAAS,MAAM;AACnB,QAAIJ,KAAJ,EAAW;AACT,aAAO;AACLK,uBAAeL,KADV;AAELM,gBAAQL,MAAMvD,EAFT;AAGLwD,cAHK;AAILC,mBAJK;AAKLI,kBAAU,KALL;AAMLC,kBAAU;AACR5D,sBAAYF;AADJ;AANL,OAAP;AAUD;AACD,WAAO;AACL4D,cAAQL,MAAMvD,EADT;AAELwD,YAFK;AAGLC,iBAHK;AAILI,gBAAU,KAJL;AAKLC,gBAAU;AACR5D,oBAAYF;AADJ;AALL,KAAP;AASD,GAtBD;;AAwBAX,SAAO0E,OAAP,CAAeC,MAAf,CAAsBN,QAAtB,EACGO,IADH,CACSC,UAAD,IAAgB;AACpB,QAAIA,WAAWC,IAAf,EAAqB;AACnB,YAAMC,gBAAgBF,WAAWV,MAAX,CAAkBa,QAAlB,EAAtB;AACA,aAAO,iCACLrE,EADK,EAELwD,MAFK,EAGLc,iBAAiB,wBACfA,cAAc3C,IADC,eAGV2C,cAAcC,IAHJ;AAIbC,yBAAiBF,cAAclB;AAJlB,UAMd,qBAAoBgB,cAAcK,KAAd,CAAoB,CAApB,EAAuBL,cAAcxE,MAAd,GAAuB,CAA9C,CAAiD,IAAGwE,cAAcK,KAAd,CAAoB,CAAC,CAArB,CAAwB,yBANlF,EAOfjF,GAPe,CAHZ,EAWLkF,kBAAkB,wBAChBA,eAAe/C,IADC,EAEhB,EAAEf,OAAO8D,eAAe9D,KAAxB,EAFgB,EAGhB8D,eAAetB,OAHC,EAIhB5D,GAJgB,CAXb,CAAP;AAiBD;AACD,WAAO,wBACL,GADK,EAEL,EAAEoB,OAAOsD,UAAT,EAFK,EAGL,6CAHK,EAIL1E,GAJK,CAAP;AAKD,GA3BH,EA4BGmF,KA5BH,CA4BUC,SAAD,IAAe;AACpB,4BACEA,UAAU/D,UADZ,EAEE,EAAED,OAAOgE,SAAT,EAFF,EAGEA,UAAUxB,OAHZ,EAIE5D,GAJF;AAKD,GAlCH;AAmCD,CA/DD;;AAiEA;kBACeP,M","file":"campaigns.js","sourcesContent":["// Create API Users Router\nimport { Router } from 'express';\nimport multer from 'multer';\nimport Stripe from 'stripe';\nimport dotenv from 'dotenv';\n\nimport { getUserInfo } from '../models/Auth0';\nimport { getCampaignById, getCampaignContent, createCampaign, createContent, updateCampaignInfo, donateToCampaign } from '../models/campaigns';\nimport jsonResponse from '../helpers/response';\nimport { uploadCampaignImage } from '../models/Cloudinary';\nimport requireAuth from '../helpers/requireAuth';\n\nconst upload = multer();\nconst router = Router();\n\nconst { STRIPE_SECRET } = dotenv.config().parsed;\n\nconst stripe = Stripe(STRIPE_SECRET);\n\n/*\n******CAMPAIGN ROUTES******\n*/\n\n// Returns the list of campaigns based on the search as sort queries.\nrouter.get('/', (req, res) => {\n  if (Object.keys(req.query).length > 0) {\n    const search = req.query.search;\n    const sort = req.query.sort;\n    if (sort && search) {\n      res.send(`\n        Returns campaigns filtered by ${search} and sorted by ${sort}.\n      `);\n    } else if (sort) {\n      res.send(`\n        Returns all campaigns sorted by ${sort}.\n      `);\n    } else if (search) {\n      res.send(`\n        Returns campaigns filtered by ${req.query.search}\n      `);\n    }\n  } else {\n    res.send('Returns all campaigns paginated.');\n  }\n});\n\n// Returns the information for the campaign with the identity param.\nrouter.get('/:campaignId', (req, res) => {\n  const id = req.params.campaignId;\n  getCampaignContent(\n    id,\n    (results) => {\n      if (results.campaignInfo.startDate) {\n        return jsonResponse(\n          200,\n          results,\n          `This is the contents for the campaign id ${id}`,\n          res,\n        );\n      } else if ('accessToken' in req.query) {\n        getUserInfo(\n          req.query.accessToken,\n          (user) => {\n            if (parseInt(user.app_metadata.nonProfitID, 10) === results.campaignInfo.nonprofitId) {\n              return jsonResponse(\n                200,\n                results,\n                `This is the preview contents for the the campaign id ${id}`,\n                res,\n              );\n            }\n            return jsonResponse(\n              401,\n              {},\n              `You aren't authorize to preview the campaign id ${id}`,\n              res,\n            );\n          },\n          error => jsonResponse(\n            error.statusCode,\n            error.original,\n            'There was an error getting the user info.',\n            res),\n        );\n      } else {\n        return jsonResponse(\n          401,\n          {},\n          'There was no access token provided.',\n          res,\n        );\n      }\n      return null;\n    },\n    (error) => {\n      if (Object.keys(error).length) {\n        return jsonResponse(\n          500,\n          error,\n          'There was an error on the server.',\n          res,\n        );\n      }\n      return jsonResponse(\n        404,\n        error,\n        'You are trying to access a campaign that doesn\\'t exist.',\n        res,\n      );\n    },\n  );\n});\n\n// Accepts information changes to a campaign with the campaignId param.\n// Returns the update campaign information.\nrouter.patch('/edit/:campaignId', (req, res) => {\n  const getCampaignId = parseInt(req.params.campaignId, 10);\n  const { accessToken, campaignInfo, campaignContent } = req.body;\n  getUserInfo(\n    accessToken,\n    (user) => {\n      const nonprofitId = parseInt(user.app_metadata.nonProfitID, 10);\n      if (campaignInfo.nonprofitId === nonprofitId) {\n        getCampaignById(\n          getCampaignId,\n          (getCampaignInfoResults) => {\n            if (getCampaignInfoResults.nonprofitId === nonprofitId) {\n              return createContent(\n                getCampaignId,\n                campaignContent,\n                (createContentResults) => {\n                  if (getCampaignInfoResults.startDate === null) {\n                    console.log(createContentResults);\n                    return updateCampaignInfo(\n                      nonprofitId,\n                      campaignInfo,\n                      (updateCampaignInfoResults) => {\n                        console.log(updateCampaignInfoResults);\n                        jsonResponse(\n                          200,\n                          updateCampaignInfoResults,\n                          'The campaign changes were successfully saved.',\n                          res,\n                        )\n                      },\n                      (updateCampaignInfoErr) => {\n                        console.log(updateCampaignInfoErr);\n                        jsonResponse(\n                          304,\n                          updateCampaignInfoErr,\n                          'The was an error saving the campaign information.',\n                          res,\n                        );\n                      });\n                  }\n                  return jsonResponse(\n                    200,\n                    createContentResults,\n                    'The campaign content was successfully saved.',\n                    res,\n                  );\n                },\n                createContentError => jsonResponse(\n                  304,\n                  createContentError,\n                  'The was an error saving the campaign content.',\n                  res,\n                ),\n              );\n            }\n            return jsonResponse(\n              401,\n              {\n                nonprofitId,\n                campaignId: getCampaignId,\n              },\n              'You are not authorized to edit this campaign.',\n              res,\n            );\n          },\n          getCampaignError => jsonResponse(\n            getCampaignError.code,\n            getCampaignError,\n            `The campaign with the id ${getCampaignId} could not be found.`,\n            res,\n          ),\n        );\n      }\n    },\n    error => jsonResponse(\n      error.statusCode,\n      error.original,\n      'There was an error getting the user info.',\n      res),\n  );\n});\n\nrouter.post('/upload/photo/:campaignId', upload.single('file'), (req, res) => {\n  const id = req.params.campaignId;\n  const { campaignName, imageType, imageAlt, nonprofitId } = req.body;\n  const image = req.file;\n\n  const imageDimensions = (imgType) => {\n    switch (imgType) {\n      case 'main':\n        return { width: 1440, height: 820 };\n      case 'left':\n        return { width: 235, height: 290 };\n      case 'right':\n        return { width: 235, height: 290 };\n      default:\n        return { width: 235, height: 290 };\n    }\n  };\n\n  const dimensions = imageDimensions(imageType);\n  const originalName = image.originalname;\n  const fileName = `${originalName.substring(0, originalName.lastIndexOf('.'))}-campaignId${id}-${(new Date()).toISOString()}`;\n\n  uploadCampaignImage(\n    image,\n    {\n      public_id: fileName,\n      folder: nonprofitId,\n      ...dimensions,\n      tags: [id, 'campaign-image', campaignName, imageAlt],\n    },\n    success => jsonResponse(\n      200,\n      success,\n      'Image created successfully.',\n      res,\n    ),\n    error => jsonResponse(\n      error.http_code,\n      error,\n      error.message,\n      res,\n    ),\n  );\n});\n\n// Accepts a new campaign information. Returns the new created campaign.\nrouter.post('/create', (req, res) => {\n  const { newCampaign, accessToken } = req.body;\n  if (requireAuth(accessToken)) {\n    getUserInfo(\n      accessToken,\n      (user) => {\n        const nonprofitId = user.app_metadata.nonProfitID;\n\n        createCampaign(\n          nonprofitId,\n          newCampaign,\n          success => console.log(success),\n          error => console.log(error),\n        );\n      },\n      error => jsonResponse(\n        error.statusCode,\n        error.original,\n        'There was an error getting the user info.',\n        res),\n    );\n  } else {\n    jsonResponse(\n      401,\n      { accessToken },\n      'The access token is not a valid access token.',\n      res,\n    );\n  }\n});\n\n\nrouter.post('/donate/:id', (req, res) => {\n  const { id } = req.params;\n  const { email, token, amount, description } = req.body;\n\n  const charge = () => {\n    if (email) {\n      return {\n        receipt_email: email,\n        source: token.id,\n        amount,\n        description,\n        currency: 'usd',\n        metadata: {\n          campaignId: id,\n        },\n      };\n    }\n    return {\n      source: token.id,\n      amount,\n      description,\n      currency: 'usd',\n      metadata: {\n        campaignId: id,\n      },\n    };\n  };\n\n  stripe.charges.create(charge())\n    .then((chargeConf) => {\n      if (chargeConf.paid) {\n        const amountCharged = chargeConf.amount.toString();\n        return donateToCampaign(\n          id,\n          amount,\n          donateResults => jsonResponse(\n            donateResults.code,\n            {\n              ...donateResults.data,\n              databaseMessage: donateResults.message,\n            },\n            `Your donation of $${amountCharged.slice(0, amountCharged.length - 2)}.${amountCharged.slice(-2)} was successfully made.`,\n            res),\n          getCampaignErr => jsonResponse(\n            getCampaignErr.code,\n            { error: getCampaignErr.error },\n            getCampaignErr.message,\n            res),\n        );\n      }\n      return jsonResponse(\n        400,\n        { error: chargeConf },\n        'There was an error processing your payment.',\n        res);\n    })\n    .catch((chargeErr) => {\n      jsonResponse(\n        chargeErr.statusCode,\n        { error: chargeErr },\n        chargeErr.message,\n        res);\n    });\n});\n\n// Exporting router as default.\nexport default router;\n"]}