{"version":3,"sources":["../../src/models/db.js"],"names":["DB_NAME","DB_USER","DB_PASS","DB_HOST","DB_SCHEMA","DB_PORT","config","parsed","sequelize","host","dialect","port","pool","max","min","idle","logging","dialectOptions","ssl","nonProfits","define","nonprofitId","type","INTEGER","allowNull","primaryKey","autoIncrement","field","name","STRING","address","city","state","zip","ein","unique","tableName","campaigns","campaignId","length","fundingNeeded","DECIMAL","donationsMade","startDate","DATE","endDate","campaignContent","contentId","contentStatus","createdDate","createdAt","updatedAt","campaignText","textId","contentPosition","textType","text","TEXT","campaignText2","references","model","key","position","kind","isVoid","nodes","campaignImages","imgId","imageType","src","alt","campaignImages2","advisors","advisorId","firstName","lastName","email","yearsExperience","advisorStatus","hasMany","foreignKey","sync"],"mappings":"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","file":"db.js","sourcesContent":["import Sequelize from 'sequelize';\nimport dotenv from 'dotenv';\n\nconst { DB_NAME, DB_USER, DB_PASS, DB_HOST, DB_SCHEMA, DB_PORT } = dotenv.config().parsed;\n\nexport const sequelize = new Sequelize(\n  DB_NAME,\n  DB_USER,\n  DB_PASS,\n  {\n    host: DB_HOST,\n    dialect: DB_SCHEMA,\n    port: DB_PORT,\n    pool: {\n      max: 5,\n      min: 0,\n      idle: 10000,\n    },\n    logging: false,\n    dialectOptions: {\n      ssl: 0,\n    },\n  },\n);\n\nexport const nonProfits = sequelize.define(\n  'nonprofits',\n  {\n    nonprofitId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'nonprofit_id',\n    },\n    name: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'name',\n    },\n    address: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'address',\n    },\n    city: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'city',\n    },\n    state: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'state',\n    },\n    zip: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'zip',\n    },\n    ein: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      unique: true,\n      field: 'ein',\n    },\n  }, {\n    tableName: 'nonprofits',\n  },\n);\n\nexport const campaigns = sequelize.define(\n  'campaigns',\n  {\n    campaignId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'campaign_id',\n    },\n    name: {\n      type: Sequelize.STRING(100),\n      allowNull: false,\n      unique: true,\n      field: 'name',\n    },\n    nonprofitId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'nonprofit_id',\n    },\n    length: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'length',\n    },\n    fundingNeeded: {\n      type: Sequelize.DECIMAL,\n      allowNull: false,\n      field: 'funding_needed',\n    },\n    donationsMade: {\n      type: Sequelize.DECIMAL,\n      allowNull: true,\n      field: 'donations_made',\n    },\n    startDate: {\n      type: Sequelize.DATE,\n      allowNull: true,\n      field: 'start_date',\n    },\n    endDate: {\n      type: Sequelize.DATE,\n      allowNull: true,\n      field: 'end_date',\n    },\n  },\n  {\n    tableName: 'campaigns',\n  },\n);\n\nexport const campaignContent = sequelize.define(\n  'campaignContent',\n  {\n    contentId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'content_id',\n    },\n    campaignId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'campaign_id',\n    },\n    contentStatus: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'content_status',\n    },\n    createdDate: {\n      type: Sequelize.DATE,\n      allowNull: false,\n      field: 'created_date',\n    },\n    createdAt: {\n      type: Sequelize.DATE,\n      allowNull: false,\n    },\n    updatedAt: {\n      type: Sequelize.DATE,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'campaign_content',\n  },\n);\n\nexport const campaignText = sequelize.define(\n  'campaignText',\n  {\n    textId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'text_id',\n    },\n    contentId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'content_id',\n    },\n    contentPosition: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'content_position',\n    },\n    textType: {\n      type: Sequelize.STRING(45),\n      allowNull: false,\n      field: 'text_type',\n    },\n    text: {\n      type: Sequelize.TEXT,\n      allowNull: false,\n    },\n    createdAt: {\n      type: Sequelize.DATE,\n      allowNull: false,\n    },\n    updatedAt: {\n      type: Sequelize.DATE,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'campaign_text',\n  },\n);\n\nexport const campaignText2 = sequelize.define(\n  'campaignText2', {\n    textId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'text_id',\n    },\n    contentId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'content_id',\n      references: {\n        model: 'campaign_content',\n        key: 'content_id',\n      },\n    },\n    position: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n    },\n    kind: {\n      type: Sequelize.STRING(45),\n      allowNull: false,\n    },\n    isVoid: {\n      type: Sequelize.INTEGER(4),\n      allowNull: false,\n      field: 'is_void',\n    },\n    type: {\n      type: Sequelize.STRING(45),\n      allowNull: false,\n    },\n    nodes: {\n      type: Sequelize.TEXT,\n      allowNull: false,\n    },\n    createdAt: {\n      type: Sequelize.DATE,\n      allowNull: false,\n    },\n    updatedAt: {\n      type: Sequelize.DATE,\n      allowNull: false,\n    },\n  }, {\n    tableName: 'campaign_text2',\n  },\n);\n\nexport const campaignImages = sequelize.define(\n  'campaignImages',\n  {\n    imgId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'imgId',\n    },\n    contentId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'content_id',\n    },\n    contentPosition: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'content_position',\n    },\n    imageType: {\n      type: Sequelize.STRING(45),\n      allowNull: false,\n      field: 'image_type',\n    },\n    src: {\n      type: Sequelize.STRING(99),\n      allowNull: false,\n    },\n    alt: {\n      type: Sequelize.STRING(45),\n      allowNull: false,\n    },\n    createdAt: {\n      type: Sequelize.DATE,\n      allowNull: false,\n    },\n    updatedAt: {\n      type: Sequelize.DATE,\n      allowNull: false,\n    },\n  }, {\n    tableName: 'campaign_images',\n  },\n);\n\nexport const campaignImages2 = sequelize.define(\n  'campaignImages2', {\n    imgId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'img_id',\n    },\n    contentId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'content_id',\n      references: {\n        model: 'campaign_content',\n        key: 'content_id',\n      },\n    },\n    position: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n    },\n    kind: {\n      type: Sequelize.STRING(45),\n      allowNull: false,\n    },\n    isVoid: {\n      type: Sequelize.INTEGER(4),\n      allowNull: false,\n      field: 'is_void',\n    },\n    type: {\n      type: Sequelize.STRING(45),\n      allowNull: false,\n    },\n    alt: {\n      type: Sequelize.STRING(45),\n      allowNull: false,\n    },\n    src: {\n      type: Sequelize.STRING(99),\n      allowNull: false,\n    },\n    imageType: {\n      type: Sequelize.STRING(45),\n      allowNull: false,\n      field: 'image_type',\n    },\n    createdAt: {\n      type: Sequelize.DATE,\n      allowNull: false,\n    },\n    updatedAt: {\n      type: Sequelize.DATE,\n      allowNull: false,\n    },\n  }, {\n    tableName: 'campaign_images2',\n  },\n);\n\nexport const advisors = sequelize.define(\n  'advisors',\n  {\n    advisorId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'advisor_id',\n    },\n    firstName: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'first_name',\n    },\n    lastName: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'last_name',\n    },\n    email: {\n      type: Sequelize.STRING(100),\n      allowNull: false,\n      unique: true,\n      field: 'email',\n    },\n    position: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'position',\n    },\n    yearsExperience: {\n      type: Sequelize.DECIMAL,\n      allowNull: false,\n      field: 'years_experience',\n    },\n    advisorStatus: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'advisor_status',\n    },\n    nonprofitId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: true,\n      unique: true,\n      field: 'nonprofit_id',\n    },\n  },\n  {\n    tableName: 'advisors',\n  },\n);\n\nnonProfits.hasMany(campaigns, { foreignKey: 'nonprofit_id' });\ncampaigns.hasMany(campaignContent, { foreignKey: 'campaign_id' });\ncampaignContent.hasMany(campaignImages, { foreignKey: 'content_id' });\ncampaignContent.hasMany(campaignText, { foreignKey: 'content_id' });\ncampaignContent.hasMany(campaignImages2, { foreignKey: 'content_id' });\ncampaignContent.hasMany(campaignText2, { foreignKey: 'content_id' });\n\nsequelize.sync();\n"]}