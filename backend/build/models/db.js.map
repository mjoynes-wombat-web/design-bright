{"version":3,"sources":["../../src/models/db.js"],"names":["DB_NAME","DB_USER","DB_PASS","DB_HOST","DB_SCHEMA","DB_PORT","config","parsed","sequelize","host","dialect","port","pool","max","min","idle","logging","dialectOptions","ssl","nonProfits","define","nonprofitId","type","INTEGER","allowNull","primaryKey","autoIncrement","field","name","STRING","address","city","state","zip","ein","unique","tableName","campaigns","campaignId","references","model","key","length","fundingNeeded","DECIMAL","donationsMade","startDate","DATE","endDate","campaignImages","imageId","contentId","imageDescription","imageUrl","TEXT","campaignContent","content","contentStatus","createdDate","advisors","advisorId","firstName","lastName","email","position","yearsExperience","advisorStatus","sync"],"mappings":"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","file":"db.js","sourcesContent":["import Sequelize from 'sequelize';\nimport dotenv from 'dotenv';\n\nconst { DB_NAME, DB_USER, DB_PASS, DB_HOST, DB_SCHEMA, DB_PORT } = dotenv.config().parsed;\n\nexport const sequelize = new Sequelize(\n  DB_NAME,\n  DB_USER,\n  DB_PASS,\n  {\n    host: DB_HOST,\n    dialect: DB_SCHEMA,\n    port: DB_PORT,\n    pool: {\n      max: 5,\n      min: 0,\n      idle: 10000,\n    },\n    logging: false,\n    dialectOptions: {\n      ssl: 0,\n    },\n  },\n);\n\nexport const nonProfits = sequelize.define('nonprofits',\n  {\n    nonprofitId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'nonprofit_id',\n    },\n    name: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'name',\n    },\n    address: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'address',\n    },\n    city: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'city',\n    },\n    state: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'state',\n    },\n    zip: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'zip',\n    },\n    ein: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      unique: true,\n      field: 'ein',\n    },\n  }, {\n    tableName: 'nonprofits',\n  },\n);\n\nexport const campaigns = sequelize.define('campaigns',\n  {\n    campaignId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'campaign_id',\n    },\n    name: {\n      type: Sequelize.STRING(100),\n      allowNull: false,\n      unique: true,\n      field: 'name',\n    },\n    nonprofitId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      references: {\n        model: 'nonprofits',\n        key: 'nonprofit_id',\n      },\n      field: 'nonprofit_id',\n    },\n    length: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      field: 'length',\n    },\n    fundingNeeded: {\n      type: Sequelize.DECIMAL,\n      allowNull: false,\n      field: 'funding_needed',\n    },\n    donationsMade: {\n      type: Sequelize.DECIMAL,\n      allowNull: false,\n      field: 'donations_made',\n    },\n    startDate: {\n      type: Sequelize.DATE,\n      allowNull: true,\n      field: 'start_date',\n    },\n    endDate: {\n      type: Sequelize.DATE,\n      allowNull: true,\n      field: 'end_date',\n    },\n  },\n  {\n    tableName: 'campaigns',\n  },\n);\n\nexport const campaignImages = sequelize.define('campaign_images',\n  {\n    imageId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'image_id',\n    },\n    contentId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      references: {\n        model: 'campaign_content',\n        key: 'content_id',\n      },\n      field: 'content_id',\n    },\n    imageDescription: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'image_description',\n    },\n    imageUrl: {\n      type: Sequelize.TEXT,\n      allowNull: false,\n      field: 'image_url',\n    },\n  },\n  {\n    tableName: 'campaign_images',\n  },\n);\n\nexport const campaignContent = sequelize.define('campaign_content',\n  {\n    contentId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      field: 'content_id',\n    },\n    campaignId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      references: {\n        model: 'campaigns',\n        key: 'campaign_id',\n      },\n      field: 'campaign_id',\n    },\n    content: {\n      type: Sequelize.TEXT,\n      allowNull: false,\n      field: 'content',\n    },\n    contentStatus: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'content_status',\n    },\n    createdDate: {\n      type: Sequelize.DATE,\n      allowNull: false,\n      field: 'created_date',\n    },\n  },\n  {\n    tableName: 'campaign_content',\n  },\n);\n\nexport const advisors = sequelize.define('advisors',\n  {\n    advisorId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true,\n      field: 'advisor_id',\n    },\n    firstName: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'first_name',\n    },\n    lastName: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'last_name',\n    },\n    email: {\n      type: Sequelize.STRING(100),\n      allowNull: false,\n      unique: true,\n      field: 'email',\n    },\n    position: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'position',\n    },\n    yearsExperience: {\n      type: Sequelize.DECIMAL,\n      allowNull: false,\n      field: 'years_experience',\n    },\n    advisorStatus: {\n      type: Sequelize.STRING(75),\n      allowNull: false,\n      field: 'advisor_status',\n    },\n    nonprofitId: {\n      type: Sequelize.INTEGER(11),\n      allowNull: true,\n      references: {\n        model: 'nonprofits',\n        key: 'nonprofit_id',\n      },\n      unique: true,\n      field: 'nonprofit_id',\n    },\n  },\n  {\n    tableName: 'advisors',\n  },\n);\n\nsequelize.sync();\n"]}