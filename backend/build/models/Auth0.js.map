{"version":3,"sources":["../../src/models/Auth0.js"],"names":["AUTH0_API_ID","AUTH0_API_SECRET","AUTH0_DOMAIN","AUTH0_CLIENT_ID","config","parsed","clientWebAuth","WebAuth","domain","clientID","createNewUser","email","password","user_metadata","app_metadata","success","error","post","client_id","client_secret","audience","grant_type","then","results","connection","name","userType","nonProfitID","headers","Authorization","data","access_token","newUser","catch","userErr","authErr","getUserInfo","accessToken","callback","client","userInfo","user"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAM,EAAEA,YAAF,EAAgBC,gBAAhB,EAAkCC,YAAlC,EAAgDC,eAAhD,KAAoE,iBAAOC,MAAP,GAAgBC,MAA1F;;AAEA,MAAMC,gBAAgB,IAAI,kBAAMC,OAAV,CAAkB;AACtCC,UAAQN,YAD8B;AAEtCO,YAAUN;AAF4B,CAAlB,CAAtB;;AAMO,MAAMO,wCAAgB,CAC3B,EAAEC,KAAF,EAASC,QAAT,EAAmBC,aAAnB,EAAkCC,YAAlC,EAD2B,EAE3BC,OAF2B,EAG3BC,KAH2B,KAIxB;AACH,kBAAMC,IAAN,CACE,4CADF,EAEE;AACEC,eAAWlB,YADb;AAEEmB,mBAAelB,gBAFjB;AAGEmB,cAAU,wCAHZ;AAIEC,gBAAY;AAJd,GAFF,EAQE,EAAE,gBAAgB,kBAAlB,EARF,EASGC,IATH,CASSC,OAAD,IAAa;AACjB,oBAAMN,IAAN,CACE,6CADF,EAEE;AACEO,kBAAY,kCADd;AAEEb,WAFF;AAGEc,YAAMd,KAHR;AAIEC,cAJF;AAKEC,mBALF;AAMEC,oBAAc;AACZY,kBAAUZ,aAAaY,QADX;AAEZC,qBAAab,aAAaa;AAFd;AANhB,KAFF,EAaE;AACEC,eAAS;AACPC,uBAAgB,UAASN,QAAQO,IAAR,CAAaC,YAAa,EAD5C;AAEP,wBAAgB;AAFT;AADX,KAbF,EAmBGT,IAnBH,CAmBQU,WAAWjB,QAAQiB,OAAR,CAnBnB,EAoBGC,KApBH,CAoBSC,WAAWlB,MAAMkB,OAAN,CApBpB;AAqBD,GA/BH,EAgCGD,KAhCH,CAgCSE,WAAWnB,MAAMmB,OAAN,CAhCpB;AAiCD,CAtCM;;AAwCA,MAAMC,oCAAc,CAACC,WAAD,EAAcC,QAAd,EAAwBtB,KAAxB,KAAkC;AAC3DV,gBAAciC,MAAd,CAAqBC,QAArB,CAA8BH,WAA9B,EAA2C,CAACH,OAAD,EAAUO,IAAV,KAAmB;AAC5D,QAAIP,OAAJ,EAAa;AACX,aAAOlB,MAAMkB,OAAN,CAAP;AACD;AACD,WAAOI,SAASG,IAAT,CAAP;AACD,GALD;AAMD,CAPM","file":"Auth0.js","sourcesContent":["import axios from 'axios';\nimport dotenv from 'dotenv';\nimport auth0 from 'auth0-js';\n\nconst { AUTH0_API_ID, AUTH0_API_SECRET, AUTH0_DOMAIN, AUTH0_CLIENT_ID } = dotenv.config().parsed;\n\nconst clientWebAuth = new auth0.WebAuth({\n  domain: AUTH0_DOMAIN,\n  clientID: AUTH0_CLIENT_ID,\n});\n\n\nexport const createNewUser = (\n  { email, password, user_metadata, app_metadata },\n  success,\n  error,\n) => {\n  axios.post(\n    'https://designbright.auth0.com/oauth/token',\n    {\n      client_id: AUTH0_API_ID,\n      client_secret: AUTH0_API_SECRET,\n      audience: 'https://designbright.auth0.com/api/v2/',\n      grant_type: 'client_credentials',\n    },\n    { 'content-type': 'application/json' })\n    .then((results) => {\n      axios.post(\n        'https://designbright.auth0.com/api/v2/users',\n        {\n          connection: 'Username-Password-Authentication',\n          email,\n          name: email,\n          password,\n          user_metadata,\n          app_metadata: {\n            userType: app_metadata.userType,\n            nonProfitID: app_metadata.nonProfitID,\n          },\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${results.data.access_token}`,\n            'content-type': 'application/json',\n          },\n        })\n        .then(newUser => success(newUser))\n        .catch(userErr => error(userErr));\n    })\n    .catch(authErr => error(authErr));\n};\n\nexport const getUserInfo = (accessToken, callback, error) => {\n  clientWebAuth.client.userInfo(accessToken, (userErr, user) => {\n    if (userErr) {\n      return error(userErr);\n    }\n    return callback(user);\n  });\n};\n"]}