{"version":3,"sources":["../../src/models/nonprofits.js"],"names":["db","findNonProfitByEIN","ein","success","error","nonProfits","find","where","then","results","catch","err","findNonProfitByID","nonprofitId","addNonProfit","nonProfitData","findResults","nonProfit","status","create","createResults","createError","editNonProfit","updateData","nonprofit","update","recordsAffected","updatedNonProfit","findUpdated","updateError"],"mappings":";;;;;;;AAAA;;IAAYA,E;;;;AAEL,MAAMC,kDAAqB,CAACC,GAAD,EAAMC,OAAN,EAAeC,KAAf,KAAyB;AACzDJ,KAAGK,UAAH,CAAcC,IAAd,CAAmB,EAAEC,OAAO,EAAEL,GAAF,EAAT,EAAnB,EACGM,IADH,CACQC,WAAWN,QAAQM,OAAR,CADnB,EAEGC,KAFH,CAESC,OAAOP,MAAMO,GAAN,CAFhB;AAGD,CAJM;;AAMA,MAAMC,gDAAoB,CAACC,WAAD,EAAcV,OAAd,EAAuBC,KAAvB,KAAiC;AAChEJ,KAAGK,UAAH,CAAcC,IAAd,CAAmB,EAAEC,OAAO,EAAEM,WAAF,EAAT,EAAnB,EACGL,IADH,CACQC,WAAWN,QAAQM,OAAR,CADnB,EAEGC,KAFH,CAESC,OAAOP,MAAMO,GAAN,CAFhB;AAGD,CAJM;;AAMA,MAAMG,sCAAe,CAACC,aAAD,EAAgBZ,OAAhB,EAAyBC,KAAzB,KAAmC;AAC7DH,qBAAmBc,cAAcb,GAAjC,EACGc,WAAD,IAAiB;AACf,QAAIA,gBAAgB,IAApB,EAA0B;AACxB,YAAMC,YAAYD,WAAlB;AACAC,gBAAUC,MAAV,GAAmB,GAAnB;AACA,aAAOf,QAAQc,SAAR,CAAP;AACD;AACDjB,OAAGK,UAAH,CAAcc,MAAd,CAAqBJ,aAArB,EACGP,IADH,CACSY,aAAD,IAAmB;AACvB,YAAMH,YAAYG,aAAlB;AACAH,gBAAUC,MAAV,GAAmB,GAAnB;AACA,aAAOf,QAAQc,SAAR,CAAP;AACD,KALH,EAMGP,KANH,CAMSW,eAAejB,MAAMiB,WAAN,CANxB;AAOA,WAAO,IAAP;AACD,GAfH,EAgBEjB,KAhBF;AAiBD,CAlBM;;AAoBA,MAAMkB,wCAAgB,CAACT,WAAD,EAAcU,UAAd,EAA0BpB,OAA1B,EAAmCC,KAAnC,KAA6C;AACxE,QAAMoB,YAAYxB,GAAGK,UAAH,CAAcoB,MAAd,CAChBF,UADgB,EAEhB;AACEhB,WAAO;AACLM;AADK;AADT,GAFgB,EAQfL,IARe,CAQTkB,eAAD,IAAqB;AACzB,QAAIA,gBAAgB,CAAhB,MAAuB,CAA3B,EAA8B;AAC5B,aAAOtB,MAAMsB,eAAN,EAAuB,gCAAvB,CAAP;AACD;;AAED1B,OAAGK,UAAH,CAAcC,IAAd,CAAmB,EAAEC,OAAO,EAAEM,WAAF,EAAT,EAAnB,EACGL,IADH,CACSC,OAAD,IAAa;AACjB,YAAMkB,mBAAmBlB,OAAzB;AACAkB,uBAAiBT,MAAjB,GAA0B,GAA1B;AACA,aAAOf,QAAQwB,gBAAR,EAA0B,8CAA1B,CAAP;AACD,KALH,EAKKjB,KALL,CAKWkB,eAAexB,MAAMwB,WAAN,EAAmB,uCAAnB,CAL1B;AAMD,GAnBe,EAoBflB,KApBe,CAoBTmB,eAAezB,MAAMyB,WAAN,EAAmB,oCAAnB,CApBN,CAAlB;AAqBD,CAtBM","file":"nonprofits.js","sourcesContent":["import * as db from './db';\n\nexport const findNonProfitByEIN = (ein, success, error) => {\n  db.nonProfits.find({ where: { ein } })\n    .then(results => success(results))\n    .catch(err => error(err));\n};\n\nexport const findNonProfitByID = (nonprofitId, success, error) => {\n  db.nonProfits.find({ where: { nonprofitId } })\n    .then(results => success(results))\n    .catch(err => error(err));\n};\n\nexport const addNonProfit = (nonProfitData, success, error) => {\n  findNonProfitByEIN(nonProfitData.ein,\n    (findResults) => {\n      if (findResults !== null) {\n        const nonProfit = findResults;\n        nonProfit.status = 200;\n        return success(nonProfit);\n      }\n      db.nonProfits.create(nonProfitData)\n        .then((createResults) => {\n          const nonProfit = createResults;\n          nonProfit.status = 201;\n          return success(nonProfit);\n        })\n        .catch(createError => error(createError));\n      return null;\n    },\n    error);\n};\n\nexport const editNonProfit = (nonprofitId, updateData, success, error) => {\n  const nonprofit = db.nonProfits.update(\n    updateData,\n    {\n      where: {\n        nonprofitId,\n      },\n    },\n  )\n    .then((recordsAffected) => {\n      if (recordsAffected[0] === 0) {\n        return error(recordsAffected, 'There were no records updated.');\n      }\n      \n      db.nonProfits.find({ where: { nonprofitId } })\n        .then((results) => {\n          const updatedNonProfit = results;\n          updatedNonProfit.status = 200;\n          return success(updatedNonProfit, 'The nonprofit info was updated successfully.');\n        }).catch(findUpdated => error(findUpdated, 'Couldn\\'t find the updated nonprofit.'));\n    })\n    .catch(updateError => error(updateError, 'The update was unable to complete.'));\n};\n"]}