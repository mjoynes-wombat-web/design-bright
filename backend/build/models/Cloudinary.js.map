{"version":3,"sources":["../../src/models/Cloudinary.js"],"names":["CLOUDINARY_NAME","CLOUDINARY_KEY","CLOUDINARY_SECRET","config","parsed","cloud_name","api_key","api_secret","uploadImage","image","options","success","error","uploader","upload_stream","response","crop","end","buffer"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAM,EAAEA,eAAF,EAAmBC,cAAnB,EAAmCC,iBAAnC,KAAyD,iBAAOC,MAAP,GAAgBC,MAA/E;;AAEA,qBAAWD,MAAX,CAAkB;AAChBE,cAAYL,eADI;AAEhBM,WAASL,cAFO;AAGhBM,cAAYL;AAHI,CAAlB;;AAMA,MAAMM,cAAc,CAACC,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,KAA1B,KAAoC;AACtD,uBAAWC,QAAX,CAAoBC,aAApB,CACEC,YACG,WAAWA,QAAZ,GACIH,MAAMG,SAASH,KAAf,CADJ,GAEID,QAAQI,QAAR,CAJR;AAOIC,UAAM;AAPV,KAQON,OARP,GAUEO,GAVF,CAUMR,MAAMS,MAVZ;AAWD,CAZD;;kBAceV,W","file":"Cloudinary.js","sourcesContent":["import cloudinary from 'cloudinary';\nimport dotenv from 'dotenv';\n\nconst { CLOUDINARY_NAME, CLOUDINARY_KEY, CLOUDINARY_SECRET } = dotenv.config().parsed;\n\ncloudinary.config({\n  cloud_name: CLOUDINARY_NAME,\n  api_key: CLOUDINARY_KEY,\n  api_secret: CLOUDINARY_SECRET,\n});\n\nconst uploadImage = (image, options, success, error) => {\n  cloudinary.uploader.upload_stream(\n    response => (\n      ('error' in response)\n        ? error(response.error)\n        : success(response)\n    ),\n    {\n      crop: 'fill',\n      ...options,\n    },\n  ).end(image.buffer);\n};\n\nexport default uploadImage;\n"]}